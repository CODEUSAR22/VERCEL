import { useState } from 'react'
import { Button } from "/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "/components/ui/card"
import { Input } from "/components/ui/input"
import { Label } from "/components/ui/label"
import { X } from "lucide-react"

export default function ProxyApp() {
  const [url, setUrl] = useState('')
  const [proxiedUrl, setProxiedUrl] = useState('')
  const [isLoading, setIsLoading] = useState(false)
  const [error, setError] = useState('')

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    setError('')
    setIsLoading(true)

    try {
      // Basic URL validation
      if (!url.trim()) {
        throw new Error('Please enter a URL')
      }

      let processedUrl = url.trim()
      
      // Add https:// if missing
      if (!processedUrl.startsWith('http://') && !processedUrl.startsWith('https://')) {
        processedUrl = `https://${processedUrl}`
      }

      // Simple proxy simulation - in a real app, this would be handled by a backend service
      setProxiedUrl(processedUrl)
    } catch (err) {
      setError(err instanceof Error ? err.message : 'Invalid URL')
      setProxiedUrl('')
    } finally {
      setIsLoading(false)
    }
  }

  const clearAll = () => {
    setUrl('')
    setProxiedUrl('')
    setError('')
  }

  return (
    <div className="min-h-screen bg-gray-50 p-4 md:p-8">
      <div className="max-w-4xl mx-auto">
        <Card>
          <CardHeader>
            <div className="flex justify-between items-start">
              <div>
                <CardTitle>Web Proxy</CardTitle>
                <CardDescription>Enter a URL to view content through this proxy</CardDescription>
              </div>
              {proxiedUrl && (
                <Button variant="ghost" size="sm" onClick={clearAll}>
                  <X className="h-4 w-4" />
                </Button>
              )}
            </div>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleSubmit} className="space-y-4">
              <div className="space-y-2">
                <Label htmlFor="url">Website URL</Label>
                <div className="flex gap-2">
                  <Input
                    id="url"
                    type="text"
                    placeholder="Enter website URL (e.g. example.com)"
                    value={url}
                    onChange={(e) => setUrl(e.target.value)}
                    className="flex-1"
                  />
                  <Button type="submit" disabled={isLoading}>
                    {isLoading ? 'Loading...' : 'Proxy'}
                  </Button>
                </div>
              </div>

              {error && (
                <div className="text-red-500 text-sm">
                  {error}
                </div>
              )}
            </form>

            {proxiedUrl && (
              <div className="mt-6 border rounded-lg overflow-hidden">
                <div className="bg-gray-100 p-2 text-sm text-gray-600">
                  Proxied content from: {proxiedUrl}
                </div>
                <div className="h-[500px] w-full">
                  {/* In a real implementation, you would use a backend proxy service */}
                  <iframe
                    src={proxiedUrl}
                    title="Proxied content"
                    className="w-full h-full border-0"
                    sandbox="allow-same-origin allow-scripts allow-popups allow-forms"
                  />
                </div>
              </div>
            )}

            {!proxiedUrl && (
              <div className="mt-8 text-center text-gray-400">
                <p>Enter a URL above to view proxied content</p>
                <p className="text-xs mt-2">Note: This is a frontend demo. In a real implementation, requests would be routed through a backend proxy service.</p>
              </div>
            )}
          </CardContent>
        </Card>
      </div>
    </div>
  )
}
Share
Refresh

